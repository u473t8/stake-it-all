{:tasks
 {:requires ([clojure.string :as str]
             [clojure.edn :as edn])
  :init     (do
              (defn tasks-from
                [dir]
                (try
                  (let [commands (->> (str dir "/bb.edn")
                                   (slurp)
                                   (edn/read-string)
                                   :tasks
                                   (keys)
                                   (filter symbol?)
                                   (map str)
                                   (set))]
                    (if (contains? commands (first *command-line-args*))
                      (apply shell {:dir dir} "bb" *command-line-args*)
                      (shell {:dir dir} "bb tasks")))
                  (catch
                    java.io.FileNotFoundException e (println (format "Error in task definition. No such file `%s/bb.edn`." dir))))))
  backend   {:doc  "Run application server"
             :task (tasks-from "backend")}
  frontend  {:doc  "Run aplication UI."
             :task (tasks-from "frontend")}
  outdated  {:doc  "Find outdated deps"
             :task (doseq [dir ["backend" "frontend"]]
                     (do (println (format "\nSearching outdated dependencies for %s project:" dir))
                       (shell (format "bb %s outdated" dir))))}}}
